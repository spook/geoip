#!/usr/bin/perl -w
use strict;
use v5.10;
use Getopt::Long qw(:config no_ignore_case bundling);
use Pod::Usage;

use constant DFL_GEODB1 => "/usr/share/GeoIP/GeoIPCity.dat";
use constant DFL_GEODB2 => "/usr/share/GeoIP/GeoIP2-City.mmdb";

# Parse command line options and args
my $opts = {};
GetOptions($opts, "geoip-data|g=s", "help|h", "verbose|v",) or pod2usage(-verbose => 0);
if ($opts->{help} || !@ARGV) {
    pod2usage(-verbose => $opts->{verbose} || 0);
}

# Open the d/b and do the lookup
my %g      = ();                                                                   # results go here
my $blank  = $opts->{verbose} ? q{--} : q{};
my $geodat = $opts->{'geoip-data'} || (-r DFL_GEODB2 ? DFL_GEODB2 : DFL_GEODB1);
if ($geodat =~ m{\.mmdb$}i) {

    # V2 format database
    require GeoIP2::Database::Reader;
    my $reader = GeoIP2::Database::Reader->new(file => $geodat);
    my $georec;
    eval {
        $georec = $reader->city(ip => $ARGV[0]);
    };
    if ($@) {
        my $err = (split(/\n/, $@, 2))[0]; # first line only
        $err =~ s{ at \S+ line \d+\.}{};
        die "*** $err\n";
    }

    $g{kk} = $georec->continent()->code()                     || $blank;
    $g{cc} = $georec->country()->iso_code()                   || $blank;
    $g{cn} = $georec->country()->name()                       || $blank;
    $g{rg} = $georec->most_specific_subdivision()->iso_code() || $blank;
    $g{rn} = $georec->most_specific_subdivision()->name()     || $blank;
    $g{mc} = $georec->location()->metro_code()                || $blank;
    $g{ct} = $georec->city()->name()                          || $blank;
    $g{tz} = $georec->location()->time_zone()                 || $blank;
    $g{la} = $georec->location()->latitude()                  || $blank;
    $g{ln} = $georec->location()->longitude()                 || $blank;
}
else {
    # V1 format database
    require Geo::IP;
    my $gi = Geo::IP->open($geodat, Geo::IP->GEOIP_STANDARD);
    die "*** Cannot open GeoIP data at $geodat\n" unless $gi;
    my $record = $gi->record_by_addr($ARGV[0]);
    die "Non-geographic IP address or data error\n" unless $record;
    $g{kk} = $record->continent_code || $blank;
    $g{cc} = $record->country_code   || $blank;
    $g{cn} = $record->country_name   || $blank;
    $g{rg} = $record->region         || $blank;
    $g{rn} = $record->region_name    || $blank;
    $g{mc} = $record->metro_code     || $blank;
    $g{ct} = $record->city           || $blank;
    $g{tz} = $record->time_zone      || $blank;
    $g{la} = $record->latitude       || $blank;
    $g{ln} = $record->longitude      || $blank;
}

# Show results
if ($opts->{verbose}) {

    # Verbose output
    say "Continent Code: $g{kk}";
    say "  Country Code: $g{cc}";
    say "  Country Name: $g{cn}";
    say "        Region: $g{rg}";
    say "   Region Name: $g{rn}";
    say "    Metro Code: $g{mc}";
    say "          City: $g{ct}";
    say "     Time Zone: $g{tz}";
    say "      Location: ($g{la},$g{ln})";
    say "GeoIP Database: $geodat";
}
else {
    # Compact output
    say "$g{kk}|$g{cc}|$g{cn}|$g{rg}|$g{rn}|$g{mc}|$g{ct}|$g{tz}|$g{la}|$g{ln}";
}

exit 0;

__END__

=head1 NAME

geoip - Lookup geolocation information for an IP address

=head1 SYNOPSIS

 geoip [options] IPADDR 

 Options:
  -g  --geoip-data FILE   Location of GeoIP database file.
  -h  --help              Usage summary.
  -v  --verbose           Show more output.  Can use twice for even more.

 IPADDR is a numeric IPv4 address.
 The GeoIP data file defaults to /usr/share/GeoIP/GeoIP-City.mmdb
 if it exists, else /usr/share/GeoIP/GeoIPCity.dat .

=head1 ARGUMENTS

=over 4

=item B<IPADDR>

A single numeric IPv4 address to lookup.  Required.

=back

=head1 OPTIONS

=over 4

=item B<--geoip-data, -g GEOIP-DATABASE-FILE>

Location of the GeoIP database file to use for IP address lookups.
If the filename ends in .mmdb it's presumed to be v2 format, else v1.
Default is the v2 format /usr/share/GeoIP/GeoIP-City.mmdb, if it
exists, else the v1 format /usr/share/GeoIP/GeoIPCity.dat .

=item B<--help, -h>

Print a brief help message and exit.

=item B<--verbose, -v>

Provide a labeled tabular output for all values.
Without this option, a compat format is used that puts all values on one line.

=back

=head1 DESCRIPTION

This utility performs a geographic IP address lookup, returning
the location, if available, for the given IP address.

=cut
